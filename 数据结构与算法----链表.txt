class LinkListEmptyError(Exception):
    pass

class Node:
    def __init__(self, value, _next=None):
        self.value = value
        self.next = _next


class LinkList:
    def __init__(self):
        self.head = None
        self.nums = 0

    def is_empty(self):
        return self.head is None

    def travel(self):
        p = self.head
        if self.is_empty():
            raise ValueError
        while p is not None:
            print(p.value)
            p = p.next

    def get(self, index):
        p = self.head
        if self.nums == 0:
            return self.head.value
        elif self.is_empty():
            raise LinkListEmptyError
        for i in range(index - 1):
            p = p.next
        return p.value

    def insert(self, node, index=None):
        p = self.head
        if self.is_empty():
            self.head = node
        elif index is None or index >= self.nums:
            while p.next is not None:
                p = p.next
            p.next = node
        else:
            for i in range(1, index):
                p = p.next
            node.next = p.next
            p.next = node
        self.nums += 1

    def delete(self, index=None):
        p = self.head
        if self.is_empty():
            raise LinkListEmptyError
        elif self.nums == 1:
            self.head = None
        elif (index is None or index >= self.nums) and self.nums >= 3:
            while p.next.next is not None:
                p = p.next
            p.next = None
        else:
            for i in range(1, index):
                p = p.next
            p.next = p.next.next
        self.nums -= 1

    def update(self, value, index):
        p = self.head
        for i in range(1, index):
            p = p.next
        p.value = value
